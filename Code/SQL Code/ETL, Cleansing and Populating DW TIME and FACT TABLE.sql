--Create table
create table DW_TIME (
DATE_ID date NOT NULL,
DAY     number(4) NOT NULL, 
DAY_NAME VARCHAR2(9) NOT NULL,
DAY_OF_WEEK VARCHAR2(6), 
MONTH_NO  NUMBER(4),
MONTH_NAME VARCHAR2(12), 
LAST_DAY_OF_MONTH number(10),
YEAR   number(6),
QUARTER VARCHAR2(6),
WEEK_OF_MONTH  NUMBER(4),
WEEK_OF_YEAR  VARCHAR2(6),
PRIMARY KEY (DATE_ID),
CONSTRAINT SESSION_S_DAY CHECK(DAY<=31),
CONSTRAINT SESSION_S_DAY_NAME CHECK(DAY_NAME IN('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY')),
CONSTRAINT SESSION_S_WEEK CHECK(WEEK_OF_YEAR<=56),
CONSTRAINT SESSION_S_MONTH_NO CHECK(MONTH_NO<=12),
CONSTRAINT SESSION_S_MONTH_NAME CHECK(MONTH_NAME IN('JANUARY', 'FEBRUARY', 'MARCH', 'APRIL', 'MAY', 'JUNE', 'JULY' , 'AUGUST', 'SEPTEMBER', 'OCTOBER', 'NOVEMBER', 'DECEMBER')));









--Cursor Populating 
declare
Cursor c_client is
SELECT SESSIONID, REQUESTID, SESSION_DATE, STATUS FROM ST_SESSION;
begin
for c_rec in c_client loop
insert into DW_TIME values(dw_time_seq1.nextval, 
to_char(c_rec.SESSION_DATE,'DD'),
to_char(c_rec.SESSION_DATE,'DAY'), 
to_char(c_rec.SESSION_DATE,'D'),
to_char(c_rec.SESSION_DATE,'MM'), 
to_char(c_rec.SESSION_DATE,'MONTH'), 
to_char(LAST_DAY(c_rec.SESSION_DATE)), 
to_char(c_rec.SESSION_DATE,'yyyy'), 
to_char(c_rec.SESSION_DATE,'Q'), 
to_char(c_rec.SESSION_DATE,'W'), 
to_char(c_rec.SESSION_DATE,'WW'));
end loop;
end;

?
--Transforming
--Alter default settings
--DEFAULT DATA
ALTER TABLE DW_TIME MODIFY DATE_ID NOT NULL;
ALTER TABLE DW_TIME MODIFY DAY NOT NULL;
ALTER TABLE DW_TIME MODIFY DAY_NAME NOT NULL;
ALTER TABLE DW_TIME MODIFY DAY_OF_WEEK NOT NULL;
ALTER TABLE DW_TIME MODIFY MONTH_NO NOT NULL;
ALTER TABLE DW_TIME MODIFY MONTH_NAME NOT NULL;
ALTER TABLE DW_TIME MODIFY LAST_DAY_OF_MONTH NOT NULL;
ALTER TABLE DW_TIME MODIFY YEAR NOT NULL;
ALTER TABLE DW_TIME MODIFY QUARTER NOT NULL;
ALTER TABLE DW_TIME MODIFY WEEK_OF_MONTH NOT NULL;
ALTER TABLE DW_TIME MODIFY WEEK_OF_YEAR NOT NULL;

--TABLE: DW_SESSION_FACT
DROP TABLE DW_FACT_SESSION;
CREATE TABLE DW_FACT_SESSION(
FACTID INT NOT NULL,
SESSIONID VARCHAR(255),
TEMPID VARCHAR(255),
TEMPREQUESTID VARCHAR(255),
LOCAL_COUNCIL_ID VARCHAR(255),
SESSIONDATE	DATE,
SESSIONSTART VARCHAR(20),
SESSIONEND VARCHAR(20),
STATUS	VARCHAR(20),
TYPE	VARCHAR(20),
EMPLOYEECOVERED	NUMBER,
DOPRINT	VARCHAR(3),
PRIMARY KEY(FACTID))
partition  by RANGE(SESSIONDATE)
	(
partition SESSIONS_2011 values less than (To_Date('31-12-2011', 'DD-MM-YYYY')),
partition SESSIONS_2012 values  less than(To_Date('31-12-2012', 'DD-MM-YYYY')));
--Transferring
INSERT INTO DW_FACT_SESSION( FACTID, SESSIONID, TEMPREQUESTID, TEMPID,
LOCAL_COUNCIL_ID,  SESSIONDATE, SESSIONSTART, SESSIONEND, STATUS, TYPE, EMPLOYEECOVERED, DOPRINT)
select  DW_FACT_TABLE_SEQ.nextval, s.sessionid, r.temprequestid, t.tempid, c.localcouncil_id,  To_Date(s.sessiondate, 'DD-MM-YYYY'), 
s.sessionstart, s.sessionend, s.status, s.type, s.employeecovered, s.doprint
from dw_session s 
inner join dw_temp t on (s.tempid = t.tempid)
inner join DW_TEMP_REQUEST r on (s.TEMPREQUESTID = r.TEMPREQUESTID)
inner join DW_LOCAL_COUNCIL c on (r.LOCALCOUNCIL_ID = c.LOCALCOUNCIL_ID);
PARTITION VIEW
SELECT * FROM DW_SESSION PARTITION(SESSIONS_2011);
SELECT * FROM DW_SESSION PARTITION(SESSIONS_2012); 

